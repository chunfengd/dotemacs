
;; tabbar mode
(require 'tabbar)
(tabbar-mode 1)
(cf-set-key-bindings
 'global-set-key
 '(
   ("C-<" tabbar-backward-tab)
   ("C->" tabbar-forward-tab)
   ("C-M-<" tabbar-backward-group)
   ("C-M->" tabbar-forward-group)
   ))
(defun cf-tabbar-buffer-groups ()
  "tabbar group"
  (list
   (cond
    ((memq major-mode '(shell-mode dired-mode tex-shell))
     "2-shell")
    ((memq major-mode '(c-mode c++-mode))
     "3-cc")
    ((string-equal "*" (substring (buffer-name) 0 1))
     "1-emacs")
    (t
     "4-other"))))
(setq tabbar-buffer-groups-function 'cf-tabbar-buffer-groups)
(set-face-attribute 'tabbar-default nil
		    :background "grey80"
		    :foreground "grey30"
		    :box '(:line-width 1 :color "grey50")
		    :height 0.8
		    )
(set-face-attribute 'tabbar-button nil
		    :inherit 'tabbar-default
		    :box '(:line-width 1 :color "grey50")
		    )
(set-face-attribute 'tabbar-selected nil
		    :inherit 'tabbar-default
		    :background "light goldenrod"
		    :foreground "dark green"
		    :box '(:line-width 1 :color "light goldenrod")
		    :overline "black"
		    :underline "dark green"
		    :weight 'bold
		    )
(set-face-attribute 'tabbar-unselected nil
		    :inherit 'tabbar-default
		    :box '(:line-width 1 :color "grey80")
		    )
